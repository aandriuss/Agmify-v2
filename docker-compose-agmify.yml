version: '3'
services:
  # Actual Speckle Server dependencies

  postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: speckle
      POSTGRES_USER: speckle
      POSTGRES_PASSWORD: speckle
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./setup/db/10-docker_postgres_init.sql:/docker-entrypoint-initdb.d/10-docker_postgres_init.sql
      - ./setup/db/11-docker_postgres_keycloack_init.sql:/docker-entrypoint-initdb.d/11-docker_postgres_keycloack_init.sql
    ports:
      - '127.0.0.1:5432:5432'

  redis:
    image: 'redis:7-alpine'
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - '127.0.0.1:6379:6379'

  minio:
    image: 'minio/minio'
    command: server /data --console-address ":9001"
    restart: always
    volumes:
      - minio-data:/data
    ports:
      - '127.0.0.1:9000:9000'
      - '127.0.0.1:9001:9001'

  # Local OIDC provider for testing
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    depends_on:
      - postgres
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: speckle
      KC_DB_PASSWORD: speckle

      KC_HOSTNAME: 127.0.0.1
      KC_HOSTNAME_PORT: 9000
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - 8443:8443
      - 9010:9000
      - 18090:8080
    command: start-dev --import-realm
    volumes:
      - ./setup/keycloak:/opt/keycloak/data/import
    # user: root
    # command: export --dir /opt/keycloak/backup --realm speckle
    # volumes:
    #   - ./keycloak-backup:/opt/keycloak/backup

  # Local email server for email troubleshooting
  maildev:
    restart: always
    image: maildev/maildev
    ports:
      - '127.0.0.1:1080:1080'
      - '127.0.0.1:1025:1025'

  # Useful for debugging / exploring local databases

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '127.0.0.1:16543:80'
    depends_on:
      - postgres

  redis_insight:
    image: redislabs/redisinsight:latest
    restart: always
    volumes:
      - redis_insight-data:/db
    ports:
      - '127.0.0.1:8001:8001'
    depends_on:
      - redis

  speckle-server:
    build:
      context: .
      dockerfile: packages/server/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-server:local
    restart: always
    ports:
      - '3000:3000'
      - '8090:8090'
    healthcheck:
      test:
        - CMD
        - /nodejs/bin/node
        - -e
        - "try { require('node:http').request({headers: {'Content-Type': 'application/json'}, port:3000, hostname:'127.0.0.1', path:'/readiness', method: 'GET', timeout: 2000 }, (res) => { body = ''; res.on('data', (chunk) => {body += chunk;}); res.on('end', () => {process.exit(res.statusCode != 200 || body.toLowerCase().includes('error'));}); }).end(); } catch { process.exit(1); }"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 90s
    environment:
      # CANONICAL_URL: 'http://127.0.0.1'
      CANONICAL_URL: 'http://speckle-server:3000'
      SESSION_SECRET: 'TODO:Replace'
      STRATEGY_LOCAL: 'true'
      LOG_LEVEL: 'info'
      POSTGRES_URL: 'postgres'
      POSTGRES_USER: 'speckle'
      POSTGRES_PASSWORD: 'speckle'
      POSTGRES_DB: 'speckle'
      REDIS_URL: 'redis://redis:6379'
      S3_ENDPOINT: 'http://minio:9000'
      S3_ACCESS_KEY: 'minioadmin'
      S3_SECRET_KEY: 'minioadmin'
      S3_BUCKET: 'speckle-server'
      S3_CREATE_BUCKET: 'true'
      S3_REGION: ''
      FILE_SIZE_LIMIT_MB: 100
      EMAIL_FROM: 'no-reply@example.org'
      USE_FRONTEND_2: true
      FRONTEND_ORIGIN: 'http://127.0.0.1'
      ONBOARDING_STREAM_URL: 'https://latest.speckle.systems/projects/843d07eb10'
      PORT: 3000
      WEBSOCKET_PORT: 8090
      NODE_ENV: 'development'
      DEBUG: 'speckle:*'
      HOST: '0.0.0.0'
      WEBSOCKET_HOST: '0.0.0.0'

  speckle-frontend-2:
    build:
      context: .
      dockerfile: packages/frontend-2/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-frontend-2:local
    restart: always
    environment:
      NUXT_PUBLIC_SERVER_NAME: 'local'
      # NUXT_PUBLIC_API_ORIGIN: 'http://127.0.0.1'
      # NUXT_PUBLIC_BASE_URL: 'http://127.0.0.1'
      NUXT_PUBLIC_API_ORIGIN: 'http://speckle-server:3000'
      NUXT_PUBLIC_BASE_URL: 'http://speckle-server:3000'
      NUXT_PUBLIC_BACKEND_API_ORIGIN: 'http://speckle-server:3000'
      NUXT_PUBLIC_LOG_LEVEL: 'warn'
      NUXT_REDIS_URL: 'redis://redis:6379'
      LOG_LEVEL: 'info'

  fileimport-service:
    build:
      context: .
      dockerfile: packages/fileimport-service/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-fileimport-service:local
    restart: always
    environment:
      LOG_LEVEL: 'info'
      PG_CONNECTION_STRING: 'postgres://speckle:speckle@postgres/speckle'
      SPECKLE_SERVER_URL: 'http://speckle-server:3000'
      FILE_IMPORT_TIME_LIMIT_MIN: 10

  speckle-ingress:
    build:
      context: .
      dockerfile: utils/docker-compose-ingress/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-docker-compose-ingress:local
    restart: always
    ports:
      - '0.0.0.0:80:8080'
    environment:
      FILE_SIZE_LIMIT_MB: '100'
      NGINX_ENVSUBST_OUTPUT_DIR: '/etc/nginx'
# Storage persistency

volumes:
  postgres-data:
  redis-data:
  pgadmin-data:
  redis_insight-data:
  minio-data:

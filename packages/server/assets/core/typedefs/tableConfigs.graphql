scalar JSON

"""
Parameter type for both BIM and user parameters
"""
type Parameter {
  id: ID!
  kind: String! # 'bim' or 'user'
  name: String!
  field: String!
  visible: Boolean!
  header: String!
  description: String
  category: String
  order: Int
  computed: JSON
  source: String
  removable: Boolean!
  value: String!
  metadata: JSON
  type: BimValueType # For BIM parameters
  sourceValue: String # For BIM parameters
  fetchedGroup: String # For BIM parameters
  currentGroup: String # For BIM parameters
  userType: UserValueType # For user parameters
  group: String # For user parameters
  equation: String # For user parameters
  isCustom: Boolean # For user parameters
}

"""
Selected parameters for table with parent/child separation
"""
type TableSelectedParameters {
  parent: [Parameter!]!
  child: [Parameter!]!
}

"""
Table configuration for storing parent and child columns and parameters
"""
type TableConfig {
  parentColumns: [TableColumn!]!
  childColumns: [TableColumn!]!
  selectedParameters: TableSelectedParameters!
}

"""
Column configuration for tables
"""
type TableColumn {
  id: ID!
  field: String!
  header: String!
  width: Int
  visible: Boolean!
  removable: Boolean
  order: Int!
  sortable: Boolean
  filterable: Boolean
  parameter: Parameter!
}

"""
Sort configuration for tables
"""
type TableSort {
  field: String
  order: SortOrder
}

"""
Filter configuration for table columns
"""
type TableFilter {
  columnId: String!
  value: JSON
  operator: String!
}

"""
Named table configuration with additional metadata
"""
type TableSettings {
  id: ID!
  name: String!
  displayName: String!
  config: TableConfig!
  categoryFilters: CategoryFilters
  sort: TableSort
  filters: [TableFilter!]
  lastUpdateTimestamp: Float!
}

enum SortOrder {
  ASC
  DESC
}

"""
Value types for BIM parameters
"""
enum BimValueType {
  string
  number
  boolean
  array
  object
}

"""
Value types for user parameters
"""
enum UserValueType {
  string
  number
  boolean
  array
  object
}

"""
Category filters for the table
"""
type CategoryFilters {
  selectedParentCategories: [String!]!
  selectedChildCategories: [String!]!
}

input TableColumnInput {
  id: ID!
  field: String!
  header: String!
  width: Int
  visible: Boolean!
  removable: Boolean
  order: Int!
  sortable: Boolean
  filterable: Boolean
  parameter: ParameterInput!
}

"""
Input type for parameters (both BIM and User types)
"""
input ParameterInput {
  # Common fields
  id: ID!
  kind: String! # 'bim' or 'user'
  name: String!
  field: String!
  visible: Boolean!
  header: String!
  description: String
  category: String
  order: Int
  computed: JSON
  source: String
  removable: Boolean!
  value: String!
  metadata: JSON

  # BIM-specific fields
  type: BimValueType # Required if kind = 'bim'
  sourceValue: String # Required if kind = 'bim'
  fetchedGroup: String # Required if kind = 'bim'
  currentGroup: String # Required if kind = 'bim'
  # User-specific fields
  userType: UserValueType # Required if kind = 'user'
  group: String # Required if kind = 'user'
  equation: String
  isCustom: Boolean
}

"""
Input for selected parameters
"""
input TableSelectedParametersInput {
  parent: [ParameterInput!]!
  child: [ParameterInput!]!
}

"""
Input for table configuration
"""
input TableConfigInput {
  parentColumns: [TableColumnInput!]!
  childColumns: [TableColumnInput!]!
  selectedParameters: TableSelectedParametersInput!
}

input CategoryFiltersInput {
  selectedParentCategories: [String!]!
  selectedChildCategories: [String!]!
}

"""
Input for table settings map
"""
input TableSettingsMapInput {
  """
  Map of table ID to table settings
  Key is the table ID, value is the table settings
  """
  tables: [TableSettingsEntry!]!
}

"""
Input for a single table settings entry
"""
input TableSettingsEntry {
  """
  Table ID - used as key in the map
  """
  id: ID!

  """
  Table settings
  """
  settings: TableSettingsInput!
}

"""
Input for table settings
"""
input TableSettingsInput {
  name: String!
  displayName: String!
  parentColumns: [TableColumnInput!]!
  childColumns: [TableColumnInput!]!
  categoryFilters: CategoryFiltersInput
  selectedParameters: TableSelectedParametersInput!
  filters: [TableFilterInput!]
  lastUpdateTimestamp: Float!
  description: String
  metadata: JSON
}

"""
Input for table filter
"""
input TableFilterInput {
  columnId: String!
  value: JSON
  operator: String!
}

extend type Mutation {
  """
  Update user tables
  Takes a map of table ID to table settings
  Stored as JSONB in database but validated through GraphQL types
  """
  userTablesUpdate(input: TableSettingsMapInput!): Boolean!

  """
  Update user settings
  """
  userSettingsUpdate(settings: JSON!): Boolean!
}

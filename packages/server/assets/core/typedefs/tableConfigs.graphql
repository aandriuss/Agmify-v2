scalar JSON

"""
Selected parameters for table with parent/child separation
"""
type TableSelectedParameters {
  parent: [Parameter!]!
  child: [Parameter!]!
}

"""
Table configuration for storing parent and child columns and parameters
"""
type TableConfig {
  parentColumns: [TableColumn!]!
  childColumns: [TableColumn!]!
  selectedParameters: TableSelectedParameters!
}

"""
Column configuration for tables
"""
type TableColumn {
  field: String!
  header: String!
  width: Int
  visible: Boolean!
  removable: Boolean
  order: Int!
}

"""
Sort configuration for tables
"""
type TableSort {
  field: String
  order: SortOrder
}

"""
Filter configuration for table columns
"""
type TableFilter {
  columnId: String!
  value: JSON
  operator: String!
}

"""
Named table configuration with additional metadata
"""
type TableSettings {
  id: ID!
  name: String!
  displayName: String!
  config: TableConfig!
  categoryFilters: CategoryFilters
  sort: TableSort
  filters: [TableFilter!]
  lastUpdateTimestamp: Float!
}

enum SortOrder {
  ASC
  DESC
}

"""
Category filters for the table
"""
type CategoryFilters {
  selectedParentCategories: [String!]!
  selectedChildCategories: [String!]!
}

input TableColumnInput {
  field: String!
  header: String!
  width: Int
  visible: Boolean!
  removable: Boolean
  order: Int!
}

"""
Input type for parameters (both BIM and User types)
"""
input ParameterInput {
  # Common fields
  id: ID!
  kind: String! # 'bim' or 'user'
  name: String!
  field: String!
  visible: Boolean!
  header: String!
  description: String
  category: String
  order: Int
  computed: JSON
  source: String
  removable: Boolean!
  value: String!
  metadata: JSON

  # BIM-specific fields
  type: BimValueType # Required if kind = 'bim'
  sourceValue: String # Required if kind = 'bim'
  fetchedGroup: String # Required if kind = 'bim'
  currentGroup: String # Required if kind = 'bim'
  # User-specific fields
  userType: UserValueType # Required if kind = 'user'
  group: String # Required if kind = 'user'
  equation: String
  isCustom: Boolean
}

"""
Input for selected parameters
"""
input TableSelectedParametersInput {
  parent: [ParameterInput!]!
  child: [ParameterInput!]!
}

"""
Input for table configuration
"""
input TableConfigInput {
  parentColumns: [TableColumnInput!]!
  childColumns: [TableColumnInput!]!
  selectedParameters: TableSelectedParametersInput!
}

input CategoryFiltersInput {
  selectedParentCategories: [String!]!
  selectedChildCategories: [String!]!
}

input CreateNamedTableInput {
  name: String!
  config: TableConfigInput!
  categoryFilters: CategoryFiltersInput
}

input TableSortInput {
  field: String
  order: SortOrder
}

input TableFilterInput {
  columnId: String!
  value: JSON
  operator: String!
}

input UpdateNamedTableInput {
  id: ID!
  name: String
  displayName: String
  config: TableConfigInput
  categoryFilters: CategoryFiltersInput
  sort: TableSortInput
  filters: [TableFilterInput!]
}

extend type Query {
  """
  Get all named table configurations for the current user
  """
  tableSettingsP: [TableSettings!]!

  """
  Get a specific named table configuration
  """
  tableSettings(id: ID!): TableSettings
}

extend type Mutation {
  """
  Create a new named table configuration
  """
  createNamedTable(input: CreateNamedTableInput!): TableSettings!

  """
  Update an existing named table configuration
  """
  updateNamedTable(input: UpdateNamedTableInput!): TableSettings!

  """
  Delete a named table configuration
  """
  deleteNamedTable(id: ID!): Boolean!
}

"""
Base parameter interface with common fields
"""
interface BaseParameter {
  id: ID!
  name: String!
  kind: String!
  type: String! # Type name as string, implementations will validate specific values
  value: String! # Always string in GraphQL, converted to proper type in resolvers
  group: String!
  metadata: JSONObject
  category: String
  description: String
}

"""
BIM parameter type
"""
type BimParameter implements BaseParameter {
  id: ID!
  name: String!
  kind: String! # Always 'bim'
  type: String! # Must match BimValueType enum values
  value: String! # Current value as string
  sourceValue: String! # Original value from BIM as string
  group: String!
  currentGroup: String!
  fetchedGroup: String!
  metadata: JSONObject
  category: String
  description: String
}

"""
User parameter type
"""
type UserParameter implements BaseParameter {
  id: ID!
  name: String!
  kind: String! # Always 'user'
  type: String! # Must match UserValueType enum values
  value: String! # Primitive value or equation value as JSON string
  group: String!
  equation: String
  metadata: JSONObject
  category: String
  description: String
}

"""
Union of all parameter types
"""
union Parameter = BimParameter | UserParameter

"""
BIM value type enum - used for validation in resolvers
"""
enum BimValueType {
  string
  number
  boolean
  date
  object
  array
}

"""
User value type enum - used for validation in resolvers
"""
enum UserValueType {
  fixed
  equation
}

"""
Response type for parameter mutations
"""
type ParameterMutationResponse {
  parameter: Parameter!
}

extend type Query {
  """
  Get all parameters for the current user
  """
  parameters: [Parameter!]!

  """
  Get a specific parameter by ID
  """
  parameter(id: ID!): Parameter

  """
  Get all parameters for a specific table
  """
  tableParameters(tableId: ID!): [Parameter!]!
}

extend type Mutation {
  """
  Create a new BIM parameter
  """
  createBimParameter(input: CreateBimParameterInput!): ParameterMutationResponse!

  """
  Create a new user parameter
  """
  createUserParameter(input: CreateUserParameterInput!): ParameterMutationResponse!

  """
  Update a BIM parameter
  """
  updateBimParameter(
    id: ID!
    input: UpdateBimParameterInput!
  ): ParameterMutationResponse!

  """
  Update a user parameter
  """
  updateUserParameter(
    id: ID!
    input: UpdateUserParameterInput!
  ): ParameterMutationResponse!

  """
  Delete a parameter
  """
  deleteParameter(id: ID!): Boolean!

  """
  Add a parameter to a table
  """
  addParameterToTable(parameterId: ID!, tableId: ID!): Boolean!

  """
  Remove a parameter from a table
  """
  removeParameterFromTable(parameterId: ID!, tableId: ID!): Boolean!
}

"""
Input for creating a BIM parameter
"""
input CreateBimParameterInput {
  name: String!
  type: BimValueType!
  sourceValue: String!
  fetchedGroup: String!
  currentGroup: String!
  field: String!
  header: String!
  category: String
  description: String
  removable: Boolean
  visible: Boolean
  order: Int
  metadata: JSONObject
  source: String
}

"""
Input for creating a user parameter
"""
input CreateUserParameterInput {
  name: String!
  type: UserValueType!
  value: String!
  group: String!
  equation: String
  field: String!
  header: String!
  category: String
  description: String
  removable: Boolean
  visible: Boolean
  order: Int
  metadata: JSONObject
  source: String
  isCustom: Boolean
}

"""
Input for updating a BIM parameter
"""
input UpdateBimParameterInput {
  name: String
  type: BimValueType
  sourceValue: String
  currentGroup: String
  field: String
  header: String
  category: String
  description: String
  removable: Boolean
  visible: Boolean
  order: Int
  metadata: JSONObject
  source: String
}

"""
Input for updating a user parameter
"""
input UpdateUserParameterInput {
  name: String
  type: UserValueType
  value: String
  group: String
  equation: String
  field: String
  header: String
  category: String
  description: String
  removable: Boolean
  visible: Boolean
  order: Int
  metadata: JSONObject
  source: String
  isCustom: Boolean
}
